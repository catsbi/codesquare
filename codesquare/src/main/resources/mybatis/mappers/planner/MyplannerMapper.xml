<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bit.codesquare.mapper.planner.MyplannerMapper">

	<select id="getGroupWorkList" resultType="UserGroupWorkList">
		SELECT b.Id, b.GroupId, b.Title, b.Content, b.WriteDate FROM GroupMemberInfo g 
		INNER JOIN Board b ON b.BoardKindId='GrpWk' AND g.GroupId=b.GroupId
		WHERE g.UserId=#{userId} ORDER BY b.WriteDate DESC LIMIT 10
	</select>
	
	
	
	<select id="getUserBookmarkList" resultType="UserBookmarkList">
		SELECT bl.Id, bl.BoardId,
				 bo.BoardKindId, bk.BoardName, bo.GroupId, bo.Nickname, bo.Title, bo.Content, bo.WriteDate, bo.`Status`
		FROM BookmarkList bl 
		INNER JOIN Board bo ON bl.BoardId=bo.Id
		INNER JOIN BoardKind bk ON bk.Id = bo.BoardKindId
		WHERE bl.UserId=#{userId} ORDER BY WriteDate DESC
	</select>
	
	<select id="getUserBookmarkKinds" resultType="UserBookmarkCatecory">
 		SELECT 'All' as Category, 'ALL' as BoardName FROM DUAL
 		UNION     
		SELECT DISTINCT LEFT(bo.BoardKindId,3), bk.BoardName
		FROM BookmarkList bl
		INNER JOIN Board bo ON bl.BoardId=bo.Id
		INNER JOIN BoardKind bk ON CONCAT("MS",LEFT(bo.BoardKindId,3))=bk.Id
		WHERE bl.UserId=#{userId}
	</select>
	
	
	<delete id="deleteBookmarkUsingId" parameterType="java.util.Map">
		<![CDATA[
			DELETE FROM ${boardKind} WHERE `Id`=#{id};
		 ]]>
	</delete>
	
	<update id="updateBookmarkDeleteCount">
		UPDATE Board SET LikeCount = LikeCount -1 WHERE id=#{boardId}
	</update>
	
	
	<select id="getUserTodoList" resultType="UserTodoList">
		SELECT id, UserId, Content, EndDate, Status FROM ToDoList WHERE `UserId`=#{userId}
		ORDER BY Status DESC, EndDate DESC,  Id DESC
	</select>
	
	<insert id="writeTodo" parameterType="userTodoList">
		<selectKey keyProperty="id" resultType="String" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO ToDoList (`UserId`, `Content`) VALUES (#{userId},#{content});
	</insert>
	
	<update id="updateTodo" parameterType="java.util.Map">
		UPDATE ToDoList SET `Content` = #{content} WHERE `Id`= #{id}
	</update>
	
	<update id="updateTodoStatus" parameterType="java.util.Map">
		UPDATE ToDoList SET Status=#{status} WHERE `UserId`=#{userId} AND `Id`=#{id}
	</update>
	
	<select id="getRowNumTodo" resultType="java.lang.String">
		<![CDATA[
			SELECT Id
			FROM ToDoList
			WHERE `UserId`=#{userId}
			ORDER BY Status DESC, EndDate DESC,  Id DESC
		 ]]>
	</select>
	

</mapper>