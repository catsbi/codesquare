<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bit.codesquare.mapper.lecture.LectureMapper">

	<!-- 강의리스트 조회 쿼리 -->
	<select id="getAllLecture" resultType="LectureIntroContent">
		SELECT *
		FROM
		v_LectureIntroContent
		<where>
			<if test="status!=null"> LectureStatus=#{status}</if>
		</where>
		
	</select>
	
	<!-- 강의소개페이지 조회 쿼리 -->
	<select id="getLecture" parameterType="int" resultType="LectureIntro">
		SELECT *
		FROM v_Lecture
		WHERE id=#{id};
	</select>
	
	<!-- 추천강의 조회 쿼리   #자기자신은 제외한다. -->
	<select id="getRecommandLecture" parameterType="int" resultType="Board">
		SELECT *
		FROM v_Lecture vl1, (SELECT * FROM v_Lecture WHERE Id=#{id})AS vl2
		WHERE
		NOT vl1.Id=vl2.Id and vl1.LangKind=vl2.LangKind LIMIT 3;
	</select>
	
	<!-- 강의목록 조회 쿼리 -->
	<select id="getLecutreList" parameterType="int"	resultType="Board">
		SELECT b2.ParentId,b2.Id, b2.Title
		FROM Board b2
		WHERE
		b2.ParentId=#{id} AND b2.BoardKindId='LrnVo'
		ORDER BY b2.Id;
	</select>
	
	<!-- 강의글의 상태(처음강의, 마지막강의, 노말상태)조회 쿼리 -->
	<select id="getLectureStatus" parameterType="int" resultType="String">
		SELECT CASE WHEN #{boardId}=(SELECT b2.Id FROM Board b2 WHERE	b2.ParentId=(SELECT b.ParentId FROM Board b WHERE b.Id=#{boardId}) AND b2.BoardKindId='LrnVo' ORDER BY b2.Id LIMIT 1) THEN 'first'
		 	        WHEN #{boardId}=(SELECT b2.Id FROM Board b2 WHERE	b2.ParentId=(SELECT b.ParentId FROM Board b WHERE b.Id=#{boardId}) AND b2.BoardKindId='LrnVo' ORDER BY b2.Id DESC LIMIT 1) THEN 'last'
		 			ELSE 'nomal' END
	</select>
	
	<!-- 강의본문 조회 쿼리 -->
	<select id="getLectureContent" parameterType="int" resultType="Lecture">
		SELECT *
		FROM v_LectureContent
		WHERE Id=#{id}
	</select>
	
	<!-- 해당강좌의 해당유저의 필기내용 조회 쿼리 -->
	<select id="getLectureHandWriting" parameterType="map" resultType="String">
		SELECT IF((SELECT COUNT(*) FROM LectureHandWriting WHERE BoardId=#{boardId} and UserId=#{userId})=0,'',
					(SELECT NoteContent FROM LectureHandWriting WHERE BoardId=#{boardId} and UserId=#{userId}));
	</select>
	
	<!-- 유저가 봐야하는 글번호 조회 쿼리 
		#유저가 강의를 처음 보는 경우 강의의 첫번째 강좌 글번호 반환
		#유저가 강의를 봤던 경우 마지막으로 봤던 강좌 글번호 반환
	 -->
	<select id="getLectureBoardIdno" parameterType="map" resultType="int">
		SELECT IF((SELECT COUNT(*) FROM UserLearningLog WHERE UserId=#{userId} AND ParentId=#{parentId})=0,
			 	(SELECT b2.Id
				 FROM Board b2
				 WHERE	b2.ParentId=#{parentId} AND b2.BoardKindId='LrnVo'
				 ORDER BY b2.Id LIMIT 1),
				(SELECT ul.BoardId
				 FROM  (SELECT * FROM UserLearningLog WHERE ParentId=22 AND UserId=#{userId} 
				 ORDER BY HearingDate DESC LIMIT 1)AS ul
				));
	</select>
	<!-- 강의 찜하기 쿼리 -->
	<insert id="insertBookmark" parameterType="map">
		INSERT INTO BookmarkList(UserId, BoardId)
		SELECT #{userId},#{boardId} FROM dual
		WHERE NOT EXISTS(SELECT UserId FROM BookmarkList WHERE UserId=#{userId} AND BoardId=#{boardId})
	</insert>
	
	<!-- 유저 강의 수강 로그 저장 쿼리 -->
	<insert id="saveLearningLog" parameterType="map"> 
		INSERT INTO UserLearningLog(UserId,ParentId,BoardId)
		VALUES(#{userId},#{parentId},#{boardId})
		ON DUPLICATE KEY UPDATE HearingDate=CURRENT_TIMESTAMP
	</insert>
	
	<!-- 강의 마지막으로 본시간 & 영상 끝까지 봤는지 여부 업데이트 -->
	<update id="updateLearningLogInfo" parameterType="LearningLogInfo">
		UPDATE UserLearningLog
		<set>
			<if test="currentTime != null">CurrentTime=#{currentTime},</if>
			<if test="duration != null">Duration=#{duration},</if>
			<if test="isClear != 'ING'">IsClear=#{isClear}</if>
		</set>
		<!-- SET CurrentTime=#{currentTime},Duration=#{currentTime},IsClear=#{isClear} -->
		WHERE BoardId=#{boardId} AND UserId=#{userId} AND ParentId=#{parentId}
	</update>
	
	<!-- 강의 영상 저장 쿼리 -->
	<insert id="saveLectureVideo" parameterType="map">
		INSERT INTO LectureVideo(Id, VideoUrl)
		VALUES (#{id}, #{videoUrl})
        ON DUPLICATE KEY UPDATE VideoUrl=#{videoUrl}
	</insert>
	
	<!-- 필기 저장 쿼리  -->
	<insert id="saveNoteContent" parameterType="map">
		INSERT INTO LectureHandWriting(Id,UserId,BoardId,NoteContent)
		VALUES ((SELECT l.Id FROM LectureHandWriting l WHERE l.UserId=#{userId} AND l.BoardId=#{boardId}),#{userId}, #{boardId}, #{content})
        ON DUPLICATE KEY UPDATE NoteContent=#{content}
	</insert>
	
	<!-- 강의 수정(업데이트)쿼리 -->
	<update id="updateLectureContent" parameterType="Lecture">
		UPDATE Board
		<set>
			<if test="title != null">Title=#{title},</if>
			<if test="content != null">Content=#{content},</if>
			<if test="nickname != null">Nickname=#{nickname}</if>
		</set>
		WHERE Id=#{id}
	</update>
	
	<!-- 강의 입력  쿼리 -->
	<insert id="insertLectureContent"   parameterType="Lecture">
		INSERT INTO Board(BoardKindId,UserId,Nickname,Title,Content,ParentId)
		VALUES(#{boardKindId},#{userId},#{nickname},#{title},#{content},#{parentId})
	<selectKey resultType="int" keyProperty="id" order="AFTER">
        SELECT MAX(Id) AS id FROM Board
    </selectKey>  
	</insert>
	
	<!-- 조회수 증가 쿼리 -->
	<update id="updateLectureHit" parameterType="int">
		UPDATE Board
		SET Hit=Hit+1
		WHERE Id=#{boardId}
	</update>
	
	<!-- 강의수강내역 조회 쿼리 -->
	<select id="getLearningLog" parameterType="map" resultType="map">
		SELECT CurrentTime as'currentTime', Duration as'duration'
		FROM UserLearningLog
		WHERE UserId=#{userId} AND ParentId=#{parentId} AND BoardId=#{boardId}
	</select>
	
	<!-- 프로그래밍 언어 태그 조회쿼리 -->
	<select id="getLectureTag" resultType="LectureTag">
		SELECT Content, ContentKr, LangKind
		FROM LectureTag;
	</select>
	
	<!-- 강의소개글 board insert 쿼리 -->
	<insert id="insertLectureIntroContent" parameterType="map">
		INSERT INTO Board(BoardKindId,UserId,Nickname,Title,Content) 
		VALUES(#{boardKindId},#{userId},#{nickname},#{title},#{content})
		<selectKey resultType="int" keyProperty="id" order="AFTER">
      	  SELECT MAX(Id) AS id FROM Board
    	</selectKey> 
	</insert>
	
	<!-- 강의소개 상세보기 insert 쿼리 -->
	<insert id="insertLectureDetailContent" parameterType="map">
		INSERT INTO LectureDetailInfo(Id,TagId,UserId,IntroContent,PriceInfo) 
		VALUES(#{id},(SELECT Id FROM LectureTag WHERE Content=#{tagId}),#{userId},#{introContent},#{priceInfo})
	</insert>
	
	<!-- 강의 언어 종류 태그 조회 쿼리 -->
	<select id="getAllLectureTag" resultType="String">
		SELECT LangKind FROM LanguageKindInfo
	</select>
	
	
	<!-- 강의목록 검색 쿼리 -->
	<select id="searchLectureIntro" parameterType="map" resultType="LectureIntroContent">
		SELECT *
		FROM v_LectureIntroContent
		<where>
			<if test="searchKind == 0">AND Title LIKE CONCAT('%',#{keyword},'%')</if>
			<if test="searchKind == 1">AND NickName LIKE #{keyWord}</if>
			<if test="langKind =='All'">AND LangKind IN(SELECT DISTINCT LangKind FROM LectureTag)</if>
			<if test="langKind != null and langKind != 'All'">AND LangKind = #{langKind}</if>
		</where>
		
	</select>
	

	
	
</mapper>
